/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import modulo.Amostras;
import modulo.Caixas;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author gabri
 */
public class JInternalFrameCaixas extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameCaixas
     */
    private Connection conexao;
    private JDesktopPane JDesktop;
    DefaultListModel caixa;
    private List<Object> amostras;

    public JInternalFrameCaixas(JDesktopPane jp, Connection conn) {
        initComponents();
        this.JDesktop = jp;
        this.conexao = conn;
        caixa = new DefaultListModel();

        PreparedStatement pstmt = null;
        try {
            pstmt = conexao.prepareStatement("SELECT * FROM caixas");
            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                caixa.addElement(new Caixas(rs.getInt("idCaixa"), rs.getInt("situacao")));
            }
            pstmt.close();
            jListCaixas.setModel(caixa);
            jListCaixas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFrameCriarCaixa.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (!jListCaixas.isSelectionEmpty()) {
            btnGerarFolhaAnalise.setEnabled(true);
            btnGerarRelatorio.setEnabled(true);
            btnLancarDadosAnalise.setEnabled(true);
        } else {
            btnGerarFolhaAnalise.setEnabled(false);
            btnGerarRelatorio.setEnabled(false);
            btnLancarDadosAnalise.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCaixas = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        btnGerarFolhaAnalise = new javax.swing.JToggleButton();
        btnLancarDadosAnalise = new javax.swing.JToggleButton();
        sair = new javax.swing.JButton();
        btnGerarRelatorio = new javax.swing.JToggleButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Caixas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Caixas Disponiveis", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jListCaixas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListCaixasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListCaixas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        btnGerarFolhaAnalise.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGerarFolhaAnalise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/signing.png"))); // NOI18N
        btnGerarFolhaAnalise.setText("Gerar folha para Análise");
        btnGerarFolhaAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarFolhaAnaliseActionPerformed(evt);
            }
        });

        btnLancarDadosAnalise.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnLancarDadosAnalise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/computer.png"))); // NOI18N
        btnLancarDadosAnalise.setText("Lançar dados da Análise");
        btnLancarDadosAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLancarDadosAnaliseActionPerformed(evt);
            }
        });

        sair.setBackground(new java.awt.Color(255, 0, 0));
        sair.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        sair.setForeground(new java.awt.Color(255, 0, 0));
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/exit.png"))); // NOI18N
        sair.setText("Sair");
        sair.setAlignmentX(0.5F);
        sair.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        sair.setIconTextGap(6);
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        btnGerarRelatorio.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/notepad.png"))); // NOI18N
        btnGerarRelatorio.setText("Gerar Relatório");
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLancarDadosAnalise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGerarFolhaAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(sair)
                        .addGap(96, 96, 96))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(btnGerarFolhaAnalise)
                .addGap(18, 18, 18)
                .addComponent(btnLancarDadosAnalise)
                .addGap(18, 18, 18)
                .addComponent(btnGerarRelatorio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(sair)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        this.dispose();
        JFramePrincipal.resetarInternalCaixas();
        JDesktop.requestFocus();
    }//GEN-LAST:event_sairActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        JFramePrincipal.resetarInternalCaixas();
    }//GEN-LAST:event_formInternalFrameClosing

    public void getDadosAmostras() throws SQLException {
        PreparedStatement pstmt = null;
        amostras = new ArrayList<>();
        Caixas x = (Caixas) caixa.getElementAt(jListCaixas.getSelectedIndex());
        int idCaixa = x.getIdCaixa();
        try {
            pstmt = conexao.prepareStatement("SELECT * FROM amostras INNER JOIN tipos_amostras ON amostras.idTipoAmostra = tipos_amostras.idTipoAmostra WHERE idCaixa = ?");
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
        }
        pstmt.setString(1, Integer.toString(idCaixa));
        ResultSet rs = pstmt.executeQuery();
        while (rs.next()) {
            amostras.add(new Amostras(rs.getInt("idAmostra"), rs.getInt("idTipoAmostra"), rs.getString("nome"), rs.getString("descricao"),
                    rs.getInt("idCliente"), rs.getInt("idSolicitante"), rs.getString("area"), rs.getString("complemento"), rs.getInt("idCaixa")));
        }
        pstmt.close();
    }
    private void btnGerarFolhaAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarFolhaAnaliseActionPerformed
        Caixas x = (Caixas) caixa.getElementAt(jListCaixas.getSelectedIndex());
        int idCaixa = x.getIdCaixa();
        try {
            getDadosAmostras();
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
        }
        Document doc = null;
        OutputStream os = null;
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF", "*.pdf");
        file.setFileFilter(filter);
        file.setAcceptAllFileFilterUsed(false);

        if (file.showSaveDialog(JDesktop) == JFileChooser.APPROVE_OPTION) {
            try {
                doc = new Document(PageSize.A2.rotate(), 72, 72, 72, 72);
                os = new FileOutputStream(file.getSelectedFile().getAbsoluteFile() + ".pdf");
                PdfWriter.getInstance(doc, os);
                doc.open();
                Image img = Image.getInstance("src\\Imagem\\logo.png");
                img.setAlignment(Element.ALIGN_CENTER);
                doc.add(img);
                Font f = new Font(FontFamily.COURIER, 20, Font.BOLD);
                Font f2 = new Font(FontFamily.HELVETICA, 14, Font.BOLD);
                Paragraph p1 = new Paragraph("Folha de análise. Caixa: " + idCaixa, f);
                p1.setAlignment(Element.ALIGN_CENTER);
                p1.setSpacingAfter(20);
                doc.add(p1);
                float[] arrayTamanho = new float[19];
                for (int i = 0; i < 19; i++) {
                    arrayTamanho[i] = 0.5f;
                }
                PdfPTable table = new PdfPTable(arrayTamanho);
                table.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
                table.getDefaultCell().setVerticalAlignment(Element.ALIGN_MIDDLE);
                table.addCell(new Paragraph("Nº", f2));
                table.addCell(new Paragraph("ID / Tipo", f2));
                table.addCell(new Paragraph("pH", f2));
                table.addCell(new Paragraph("SMP", f2));
                table.addCell(new Paragraph("Argila", f2));
                table.addCell(new Paragraph("M.O.", f2));
                table.addCell(new Paragraph("Ca", f2));
                table.addCell(new Paragraph("Mg", f2));
                table.addCell(new Paragraph("AI", f2));
                table.addCell(new Paragraph("P", f2));
                table.addCell(new Paragraph("K", f2));
                table.addCell(new Paragraph("Na", f2));
                table.addCell(new Paragraph("Cu", f2));
                table.addCell(new Paragraph("Zn", f2));
                table.addCell(new Paragraph("Fe", f2));
                table.addCell(new Paragraph("Mn", f2));
                table.addCell(new Paragraph("S", f2));
                table.addCell(new Paragraph("P-resina", f2));
                table.addCell(new Paragraph("B", f2));
                for (int i = 0; i < amostras.size(); i++) {
                    Amostras t = (Amostras) amostras.get(i);
                    table.addCell(Integer.toString(i + 1));
                    table.addCell(Integer.toString(t.getIdAmostra()) + " / " + t.getNome());
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    table.addCell("");
                    if (t.getIdTipoAmostra() == 2 || t.getIdTipoAmostra() == 3 || t.getIdTipoAmostra() == 4 || t.getIdTipoAmostra() == 5 || t.getIdTipoAmostra() == 6 || t.getIdTipoAmostra() == 7 || t.getIdTipoAmostra() == 8
                            || t.getIdTipoAmostra() == 9) {
                        table.addCell("");
                        table.addCell("");
                        table.addCell("");
                        table.addCell("");
                        if (t.getIdTipoAmostra() == 3 || t.getIdTipoAmostra() == 6 || t.getIdTipoAmostra() == 7 || t.getIdTipoAmostra() == 9) {
                            table.addCell("");
                        } else {
                            table.addCell(new Paragraph("x", f2));
                        }
                        if (t.getIdTipoAmostra() == 5 || t.getIdTipoAmostra() == 7 || t.getIdTipoAmostra() == 8 || t.getIdTipoAmostra() == 9) {
                            table.addCell("");
                        } else {
                            table.addCell(new Paragraph("x", f2));
                        }
                        if (t.getIdTipoAmostra() == 4 || t.getIdTipoAmostra() == 6 || t.getIdTipoAmostra() == 8 || t.getIdTipoAmostra() == 9) {
                            table.addCell("");
                        } else {
                            table.addCell(new Paragraph("x", f2));
                        }

                    } else {
                        table.addCell(new Paragraph("x", f2));
                        table.addCell(new Paragraph("x", f2));
                        table.addCell(new Paragraph("x", f2));
                        table.addCell(new Paragraph("x", f2));
                        table.addCell(new Paragraph("x", f2));
                        table.addCell(new Paragraph("x", f2));
                        table.addCell(new Paragraph("x", f2));
                    }

                }
                doc.add(table);

            } catch (FileNotFoundException | DocumentException ex) {
                Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                if (doc != null) {
                    doc.close();
                    JOptionPane.showMessageDialog(null, "PDF gerado com sucesso!");
                    // Get a file from the command line to open
                    String filePath = file.getSelectedFile().getAbsoluteFile() + ".pdf";

                    // build a component controller
                    SwingController controller = new SwingController();

                    SwingViewBuilder factory = new SwingViewBuilder(controller);

                    JPanel viewerComponentPanel = factory.buildViewerPanel();

                    // add interactive mouse link annotation support via callback
                    controller.getDocumentViewController().setAnnotationCallback(
                            new org.icepdf.ri.common.MyAnnotationCallback(
                                    controller.getDocumentViewController()));

                    JFrame applicationFrame = new JFrame();
                    applicationFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    applicationFrame.getContentPane().add(viewerComponentPanel);

                    // Now that the GUI is all in place, we can try opening a PDF
                    controller.openDocument(filePath);

                    // show the component
                    applicationFrame.pack();
                    applicationFrame.setVisible(true);
                }
                if (os != null) {
                    try {
                        os.close();
                    } catch (IOException ex) {
                        Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        }
    }//GEN-LAST:event_btnGerarFolhaAnaliseActionPerformed

    private void btnLancarDadosAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLancarDadosAnaliseActionPerformed
        try {
            getDadosAmostras();
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
        }
        JInternalFrameLancarDadosAmostras dados = new JInternalFrameLancarDadosAmostras(conexao, amostras);
        JDesktop.add(dados).setVisible(true);

    }//GEN-LAST:event_btnLancarDadosAnaliseActionPerformed

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed

        Caixas x = (Caixas) caixa.getElementAt(jListCaixas.getSelectedIndex());
        int idCaixa = x.getIdCaixa();
        JInternalFrameGerarRelatorio gerarRelatorio = new JInternalFrameGerarRelatorio(conexao, idCaixa, JDesktop);
        JDesktop.add(gerarRelatorio).setVisible(true);
        gerarRelatorio.setPosicao();

    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void jListCaixasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListCaixasValueChanged
        PreparedStatement pstmt = null;
        Caixas x = (Caixas) caixa.getElementAt(jListCaixas.getSelectedIndex());
        try {
            pstmt = conexao.prepareStatement("SELECT * FROM caixas WHERE idCaixa = ?");
            pstmt.setString(1, Integer.toString(x.getIdCaixa()));
            ResultSet rs = pstmt.executeQuery();
            rs.next();
            x = new Caixas(rs.getInt("idCaixa"), rs.getInt("situacao"));
            pstmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFrameCriarCaixa.class.getName()).log(Level.SEVERE, null, ex);
        }

        int situacao = x.getSituacao();
        if (situacao == 1) {
            btnGerarRelatorio.setEnabled(true);
            btnLancarDadosAnalise.setEnabled(false);
            btnGerarFolhaAnalise.setEnabled(false);
        } else {
            btnGerarRelatorio.setEnabled(false);
            btnLancarDadosAnalise.setEnabled(true);
            btnGerarFolhaAnalise.setEnabled(true);
        }
    }//GEN-LAST:event_jListCaixasValueChanged

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnGerarFolhaAnalise;
    private javax.swing.JToggleButton btnGerarRelatorio;
    private javax.swing.JToggleButton btnLancarDadosAnalise;
    private javax.swing.JList<String> jListCaixas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables
}
