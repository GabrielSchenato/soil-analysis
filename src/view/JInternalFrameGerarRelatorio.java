/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import modulo.Clientes;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author gabri
 */
public class JInternalFrameGerarRelatorio extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameGerarRelatorio
     */
    private Connection conexao;
    private int idCaixa;
    DefaultListModel clientes;
    private JDesktopPane JDesktop;

    public JInternalFrameGerarRelatorio(Connection conn, int idCaixa, JDesktopPane jp) {
        initComponents();
        this.conexao = conn;
        this.idCaixa = idCaixa;
        this.JDesktop = jp;
        clientes = new DefaultListModel();
        labelidCaixa.setText(Integer.toString(idCaixa));

        PreparedStatement pstmt = null;

        try {
            pstmt = conexao.prepareStatement("SELECT * FROM clientes INNER JOIN amostras ON amostras.idCliente = clientes.idCliente WHERE idCaixa = ? GROUP BY clientes.idCliente");
            pstmt.setString(1, Integer.toString(idCaixa));
            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                clientes.addElement(new Clientes(rs.getInt("idCliente"), rs.getString("nome"), rs.getString("telefone"), rs.getString("rua"), rs.getString("bairro"),
                        rs.getString("cep"), rs.getString("cidade"), rs.getString("uf")));
            }
            pstmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(JInternalFrameGerarRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        }
        jListClientes.setModel(clientes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListClientes = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        sair = new javax.swing.JButton();
        btnGerarRelatorio = new javax.swing.JToggleButton();
        labelidCaixa = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Gerar Relatório");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jListClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListClientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Caixa:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        sair.setBackground(new java.awt.Color(255, 0, 0));
        sair.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        sair.setForeground(new java.awt.Color(255, 0, 0));
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/exit.png"))); // NOI18N
        sair.setText("Sair");
        sair.setAlignmentX(0.5F);
        sair.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        sair.setIconTextGap(6);
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        btnGerarRelatorio.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/notepad.png"))); // NOI18N
        btnGerarRelatorio.setText("Gerar Relatório");
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sair)
                .addGap(118, 118, 118))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addComponent(btnGerarRelatorio)
                .addGap(154, 154, 154)
                .addComponent(sair)
                .addGap(28, 28, 28))
        );

        labelidCaixa.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelidCaixa)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelidCaixa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed
        if (!jListClientes.isSelectionEmpty()) {
            Clientes cliente = (Clientes) clientes.getElementAt(jListClientes.getSelectedIndex());
            PreparedStatement pstmt = null;
            PreparedStatement pstmtSolicitante = null;

            try {
                pstmt = conexao.prepareStatement("SELECT * FROM analises INNER JOIN amostras ON analises.idAmostra = amostras.idAmostra INNER JOIN clientes ON amostras.idCliente = clientes.idCliente WHERE amostras.idCaixa = ? AND clientes.idCliente = ?");
                pstmt.setString(1, Integer.toString(idCaixa));
                pstmt.setString(2, Integer.toString(cliente.getIdCliente()));
                ResultSet rs = pstmt.executeQuery();
                rs.next();

                pstmtSolicitante = conexao.prepareStatement("SELECT * FROM clientes WHERE idCliente = ?");
                pstmtSolicitante.setString(1, Integer.toString(rs.getInt("idSolicitante")));
                ResultSet rsSolicitante = pstmtSolicitante.executeQuery();
                rsSolicitante.next();

                Document doc = null;
                OutputStream os = null;
                JFileChooser file = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF", "*.pdf");
                file.setFileFilter(filter);
                file.setAcceptAllFileFilterUsed(false);

                if (file.showSaveDialog(JDesktop) == JFileChooser.APPROVE_OPTION) {
                    try {
                        doc = new Document(PageSize.A2.rotate(), 72, 72, 72, 72);
                        os = new FileOutputStream(file.getSelectedFile().getAbsoluteFile() + ".pdf");
                        PdfWriter.getInstance(doc, os);
                        doc.open();
                        Image img = Image.getInstance("src\\Imagem\\logo.png");
                        img.setAlignment(Element.ALIGN_CENTER);
                        doc.add(img);
                        Font f = new Font(Font.FontFamily.COURIER, 20, Font.BOLD);
                        Font f2 = new Font(Font.FontFamily.HELVETICA, 14, Font.BOLD);
                        Paragraph p1 = new Paragraph("Nome: " + cliente.getNome(), f);
                        Paragraph p2 = new Paragraph("Solicitante: " + rsSolicitante.getString("nome"), f);
                        Paragraph p3 = new Paragraph("Endereço: " + cliente.getRua() + " - " + cliente.getBairro() + " CEP: " + cliente.getCep(), f);
                        Paragraph p4 = new Paragraph("Cidade/UF: " + cliente.getCidade() + "/" + cliente.getUf(), f);
                        p1.setAlignment(Element.ALIGN_LEFT);
                        p1.setSpacingAfter(20);
                        p2.setAlignment(Element.ALIGN_LEFT);
                        p2.setSpacingAfter(20);
                        p3.setAlignment(Element.ALIGN_LEFT);
                        p3.setSpacingAfter(20);
                        p3.setAlignment(Element.ALIGN_LEFT);
                        p3.setSpacingAfter(20);
                        p4.setAlignment(Element.ALIGN_LEFT);
                        p4.setSpacingAfter(20);
                        doc.add(p1);
                        doc.add(p2);
                        doc.add(p3);
                        doc.add(p4);
                        float[] arrayTamanho = new float[18];
                        for (int i = 0; i < 18; i++) {
                            arrayTamanho[i] = 0.5f;
                        }
                        PdfPTable table = new PdfPTable(arrayTamanho);
                        table.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
                        table.getDefaultCell().setVerticalAlignment(Element.ALIGN_MIDDLE);
                        table.addCell(new Paragraph("ID", f2));
                        table.addCell(new Paragraph("pH", f2));
                        table.addCell(new Paragraph("SMP", f2));
                        table.addCell(new Paragraph("Argila", f2));
                        table.addCell(new Paragraph("M.O.", f2));
                        table.addCell(new Paragraph("Ca", f2));
                        table.addCell(new Paragraph("Mg", f2));
                        table.addCell(new Paragraph("AI", f2));
                        table.addCell(new Paragraph("P", f2));
                        table.addCell(new Paragraph("K", f2));
                        table.addCell(new Paragraph("Na", f2));
                        table.addCell(new Paragraph("Cu", f2));
                        table.addCell(new Paragraph("Zn", f2));
                        table.addCell(new Paragraph("Fe", f2));
                        table.addCell(new Paragraph("Mn", f2));
                        table.addCell(new Paragraph("S", f2));
                        table.addCell(new Paragraph("P-resina", f2));
                        table.addCell(new Paragraph("B", f2));
                        do {
                            table.addCell(Integer.toString(rs.getInt("idAmostra")));
                            table.addCell(Float.toString(rs.getFloat("ph")));
                            table.addCell(Float.toString(rs.getFloat("smp")));
                            table.addCell(Float.toString(rs.getFloat("argila")));
                            table.addCell(Float.toString(rs.getFloat("mo")));
                            table.addCell(Float.toString(rs.getFloat("ca")));
                            table.addCell(Float.toString(rs.getFloat("mg")));
                            table.addCell(Float.toString(rs.getFloat("ai")));
                            table.addCell(Float.toString(rs.getFloat("p")));
                            table.addCell(Float.toString(rs.getFloat("k")));
                            table.addCell(Float.toString(rs.getFloat("na")));
                            table.addCell(Float.toString(rs.getFloat("cu")));
                            table.addCell(Float.toString(rs.getFloat("zn")));
                            table.addCell(Float.toString(rs.getFloat("fe")));
                            table.addCell(Float.toString(rs.getFloat("mn")));
                            table.addCell(Float.toString(rs.getFloat("s")));
                            table.addCell(Float.toString(rs.getFloat("pResina")));
                            table.addCell(Float.toString(rs.getFloat("b")));

                        } while (rs.next());
                        doc.add(table);

                    } catch (FileNotFoundException | DocumentException ex) {
                        Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
                    } finally {
                        if (doc != null) {
                            doc.close();
                            JOptionPane.showMessageDialog(null, "PDF gerado com sucesso!");
                            // Get a file from the command line to open
                            String filePath = file.getSelectedFile().getAbsoluteFile() + ".pdf";

                            // build a component controller
                            SwingController controller = new SwingController();

                            SwingViewBuilder factory = new SwingViewBuilder(controller);

                            JPanel viewerComponentPanel = factory.buildViewerPanel();

                            // add interactive mouse link annotation support via callback
                            controller.getDocumentViewController().setAnnotationCallback(
                                    new org.icepdf.ri.common.MyAnnotationCallback(
                                            controller.getDocumentViewController()));

                            JFrame applicationFrame = new JFrame();
                            applicationFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            applicationFrame.getContentPane().add(viewerComponentPanel);

                            // Now that the GUI is all in place, we can try opening a PDF
                            controller.openDocument(filePath);

                            // show the component
                            applicationFrame.pack();
                            applicationFrame.setVisible(true);

                        }
                        if (os != null) {
                            try {
                                os.close();
                            } catch (IOException ex) {
                                Logger.getLogger(JInternalFrameCaixas.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }
                }

                pstmt.close();
                rsSolicitante.close();
            } catch (SQLException ex) {
                Logger.getLogger(JInternalFrameGerarRelatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Primeiro selecione um cliente!");
        }
    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        this.dispose();
    }//GEN-LAST:event_sairActionPerformed
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnGerarRelatorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jListClientes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelidCaixa;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables
}
